@model TPO.DL.Models.RawMaterialQCRedHold

@{
    ViewBag.Title = "New TPO QC Red & Hold Form";
}
    <!-- Style css for tabs. refactor later and move to css sheet.-->
        <style>
            #tabs-container {
                margin:20px;
            }

            #tabs-container ul.tabs-menu {
                height: 30px;
                list-style-type:none;
                margin-bottom:0px;
            }


            #tabs-container ul.tabs-menu li {
                height: 30px;
                line-height: 30px;
                display:inline-block;
                margin-right: 10px;
                background-color: #ccc;
                border-top: 1px solid #ccc;
                border-right: 1px solid #ccc;
                border-left: 1px solid #ccc;
            }

            #tabs-container ul.tabs-menu li.current {
                background-color: #fff;
                border-bottom: 1px solid #fff;
                z-index:5;
            }

            #tabs-container .tabs-menu li a {
                padding: 10px;
                color:#fff;               
                text-decoration:none;
            }

            #tabs-container .tabs-menu li.current a {
                color: #000;
            }

            #tabs-container .tab {
                border: 1px solid #ccc;
                background-color:#fff;
                display:block;
                margin-bottom:20px;
                width:auto;
            }

            #tabs-container .tab .tab-content {
                width: 700px;
                padding:20px;
                display:none;
            }

            #tabs-container div.tab div#tab-red {
                display: block;
            }

        </style>

<h3>New TPO QC Red &amp; Hold Form</h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
       @* @this.Model.RawMaterialQCID = ViewBag.RawMaterialQCID*@
        @*@this.model.RawMaterialQCID = ViewBag.RawMaterialQCID*@
        @Html.HiddenFor(model => model.RawMaterialQCID)

        <div class="form-group">
            @Html.Label("Lot Number: ", new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.TextBox("lotNumber", (string)ViewBag.lookupLotID, new { @disabled="true"})
                @*@Html.EditorFor(model => model.ID)*@
                @*@Html.ValidationMessageFor(model => model.ID)*@
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.QCTechID, "QC Tech: ", new { @class = "control-label col-md-3" })
                <div class="col-md-1">
                    @Html.DropDownList("QCTechID",String.Empty)
                    @Html.ValidationMessageFor(model => model.QCTechID)
                </div>
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PrimeBoxCar, "Box\\Car Tested: ", new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.PrimeBoxCar)
                @Html.ValidationMessageFor(model => model.PrimeBoxCar)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SupervisorID, "Shift Supervisor: ", new { @class = "control-label col-md-3" })
                <div class="col-md-1">
                    @Html.DropDownList("SupervisorID", String.Empty)
                    @Html.ValidationMessageFor(model => model.SupervisorID)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlantID, "Plant", new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.DropDownList("PlantID", String.Empty)
                @Html.ValidationMessageFor(model => model.PlantID)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LeadOperatorID, "Lead Operation", new { @class = "control-label col-md-3" })
                <div class="col-md-1">
                    @Html.DropDownList("LeadOperatorID", String.Empty)
                    @Html.ValidationMessageFor(model => model.LeadOperatorID)
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RawMaterialReceivedID, "Raw Material: ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RawMaterialReceivedID", String.Empty)
                @Html.ValidationMessageFor(model => model.RawMaterialReceivedID)
            </div>
        </div>
        <hr />

        <div id="tabs-container">
            <ul class="tabs-menu">
                <li class="current"><a href="#tab-red">Red Form</a></li>
                <li class=""><a href="#tab-hold">Hold Form</a></li>
            </ul>
            <div class="tab">
                <div id="tab-red" class="tab-content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RedDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.RedDate)
                            @Html.ValidationMessageFor(model => model.RedDate)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FailPropertyID, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("FailPropertyID", String.Empty)
                            @Html.ValidationMessageFor(model => model.FailPropertyID)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Zone, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Zone)
                            @Html.ValidationMessageFor(model => model.Zone)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RedComments, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.RedComments, new { style = "width:1000px;height:105px" })
                            @Html.ValidationMessageFor(model => model.RedComments)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RedCorrectionAction, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.RedCorrectionAction, new { style = "width:1000px;height:105px" })
                            @Html.ValidationMessageFor(model => model.RedCorrectionAction)
                        </div>
                    </div>
                </div>
                <div id="tab-hold" class="tab-content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.HoldDate, "HoldDate:", new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.HoldDate)
                            @Html.ValidationMessageFor(model => model.HoldDate)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.HoldLotID, "HoldLotID: ", new { @class = "control-label col-md-3" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.HoldLotID)
                            @Html.ValidationMessageFor(model => model.HoldLotID)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.HoldComments, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.HoldComments)
                            @Html.ValidationMessageFor(model => model.HoldComments)
                        </div>
                    </div>

                    <h4>Management Action Take</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ManagerID, "ManagerID", new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.DropDownList("ManagerID", String.Empty)
                            @Html.ValidationMessageFor(model => model.ManagerID)
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.ManagerDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.ManagerDate)
                            @Html.ValidationMessageFor(model => model.ManagerDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ManagerComments, new { @class = "control-label col-md-3" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(model => model.ManagerComments, new { style = "width:1000px;height:105px" })
                            @Html.ValidationMessageFor(model => model.ManagerComments)
                        </div>


                        <div style="float:right;" class="">

                            <table border="1" align="center" width="290">
                                <caption><h4>QC Downgrades</h4></caption>

                                <tr>
                                    <th align="center"><b>Classification</b></th>
                                    <th align="center"><b>Boxes\Cars</b></th>
                                    <th align="center"><b>lb</b></th>
                                </tr>
                                <tr>
                                    <td align="center">Prime</td>
                                    <td align="center">@Html.EditorFor(model => model.PrimeBoxCar)</td>
                                    <td align="center">@Html.EditorFor(model => model.PrimeUOM)</td>
                                </tr>
                                <tr>
                                    <td align="center">Rework</td>
                                    <td align="center">@Html.EditorFor(model => model.ReworkBoxCar)</td>
                                    <td align="center">@Html.EditorFor(model => model.ReworkUOM)</td>
                                </tr>
                                <tr>
                                    <td align="center">Scrap</td>
                                    <td align="center">@Html.EditorFor(model => model.ScrapBoxCar)</td>
                                    <td align="center">@Html.EditorFor(model => model.ScrapUOM)</td>
                                </tr>

                            </table>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Return to Raw Material QC", "Edit", "RawMaterialQC", new { ID = Model.RawMaterialQCID }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

    <!-- Jquery code to run tabs -->
    <script type="text/javascript">
        $(document).ready(function(){
            $(".tabs-menu a").click(function (event) {
                //prevent url change
                event.preventDefault();
                //add css to current tab for style
                $(this).parent().addClass("current");
                //remove style from any other tab
                $(this).parent().siblings().removeClass("current");
                //get tab id from href of menu link
                var currentTabID = $(this).attr("href");
                //hide all other tabs
                $(".tab-content").not(currentTabID).css("display", "none");
                //display current tab
                $(currentTabID).fadeIn();
            });
        });
    </script>
